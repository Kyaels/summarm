--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=10 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_nma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode172w[1..0]	: WIRE;
	w_anode181w[3..0]	: WIRE;
	w_anode198w[3..0]	: WIRE;
	w_anode208w[3..0]	: WIRE;
	w_anode218w[3..0]	: WIRE;
	w_anode228w[3..0]	: WIRE;
	w_anode238w[3..0]	: WIRE;
	w_anode248w[3..0]	: WIRE;
	w_anode258w[3..0]	: WIRE;
	w_anode270w[1..0]	: WIRE;
	w_anode277w[3..0]	: WIRE;
	w_anode288w[3..0]	: WIRE;
	w_anode298w[3..0]	: WIRE;
	w_anode308w[3..0]	: WIRE;
	w_anode318w[3..0]	: WIRE;
	w_anode328w[3..0]	: WIRE;
	w_anode338w[3..0]	: WIRE;
	w_anode348w[3..0]	: WIRE;
	w_data170w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[9..0] = eq_wire[9..0];
	eq_wire[] = ( ( w_anode348w[3..3], w_anode338w[3..3], w_anode328w[3..3], w_anode318w[3..3], w_anode308w[3..3], w_anode298w[3..3], w_anode288w[3..3], w_anode277w[3..3]), ( w_anode258w[3..3], w_anode248w[3..3], w_anode238w[3..3], w_anode228w[3..3], w_anode218w[3..3], w_anode208w[3..3], w_anode198w[3..3], w_anode181w[3..3]));
	w_anode172w[] = ( (w_anode172w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode181w[] = ( (w_anode181w[2..2] & (! w_data170w[2..2])), (w_anode181w[1..1] & (! w_data170w[1..1])), (w_anode181w[0..0] & (! w_data170w[0..0])), w_anode172w[1..1]);
	w_anode198w[] = ( (w_anode198w[2..2] & (! w_data170w[2..2])), (w_anode198w[1..1] & (! w_data170w[1..1])), (w_anode198w[0..0] & w_data170w[0..0]), w_anode172w[1..1]);
	w_anode208w[] = ( (w_anode208w[2..2] & (! w_data170w[2..2])), (w_anode208w[1..1] & w_data170w[1..1]), (w_anode208w[0..0] & (! w_data170w[0..0])), w_anode172w[1..1]);
	w_anode218w[] = ( (w_anode218w[2..2] & (! w_data170w[2..2])), (w_anode218w[1..1] & w_data170w[1..1]), (w_anode218w[0..0] & w_data170w[0..0]), w_anode172w[1..1]);
	w_anode228w[] = ( (w_anode228w[2..2] & w_data170w[2..2]), (w_anode228w[1..1] & (! w_data170w[1..1])), (w_anode228w[0..0] & (! w_data170w[0..0])), w_anode172w[1..1]);
	w_anode238w[] = ( (w_anode238w[2..2] & w_data170w[2..2]), (w_anode238w[1..1] & (! w_data170w[1..1])), (w_anode238w[0..0] & w_data170w[0..0]), w_anode172w[1..1]);
	w_anode248w[] = ( (w_anode248w[2..2] & w_data170w[2..2]), (w_anode248w[1..1] & w_data170w[1..1]), (w_anode248w[0..0] & (! w_data170w[0..0])), w_anode172w[1..1]);
	w_anode258w[] = ( (w_anode258w[2..2] & w_data170w[2..2]), (w_anode258w[1..1] & w_data170w[1..1]), (w_anode258w[0..0] & w_data170w[0..0]), w_anode172w[1..1]);
	w_anode270w[] = ( (w_anode270w[0..0] & data_wire[3..3]), enable_wire);
	w_anode277w[] = ( (w_anode277w[2..2] & (! w_data170w[2..2])), (w_anode277w[1..1] & (! w_data170w[1..1])), (w_anode277w[0..0] & (! w_data170w[0..0])), w_anode270w[1..1]);
	w_anode288w[] = ( (w_anode288w[2..2] & (! w_data170w[2..2])), (w_anode288w[1..1] & (! w_data170w[1..1])), (w_anode288w[0..0] & w_data170w[0..0]), w_anode270w[1..1]);
	w_anode298w[] = ( (w_anode298w[2..2] & (! w_data170w[2..2])), (w_anode298w[1..1] & w_data170w[1..1]), (w_anode298w[0..0] & (! w_data170w[0..0])), w_anode270w[1..1]);
	w_anode308w[] = ( (w_anode308w[2..2] & (! w_data170w[2..2])), (w_anode308w[1..1] & w_data170w[1..1]), (w_anode308w[0..0] & w_data170w[0..0]), w_anode270w[1..1]);
	w_anode318w[] = ( (w_anode318w[2..2] & w_data170w[2..2]), (w_anode318w[1..1] & (! w_data170w[1..1])), (w_anode318w[0..0] & (! w_data170w[0..0])), w_anode270w[1..1]);
	w_anode328w[] = ( (w_anode328w[2..2] & w_data170w[2..2]), (w_anode328w[1..1] & (! w_data170w[1..1])), (w_anode328w[0..0] & w_data170w[0..0]), w_anode270w[1..1]);
	w_anode338w[] = ( (w_anode338w[2..2] & w_data170w[2..2]), (w_anode338w[1..1] & w_data170w[1..1]), (w_anode338w[0..0] & (! w_data170w[0..0])), w_anode270w[1..1]);
	w_anode348w[] = ( (w_anode348w[2..2] & w_data170w[2..2]), (w_anode348w[1..1] & w_data170w[1..1]), (w_anode348w[0..0] & w_data170w[0..0]), w_anode270w[1..1]);
	w_data170w[2..0] = data_wire[2..0];
END;
--VALID FILE
