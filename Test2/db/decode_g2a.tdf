--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=10 LPM_WIDTH=4 data eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_g2a
( 
	data[3..0]	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode363w[3..0]	: WIRE;
	w_anode380w[3..0]	: WIRE;
	w_anode390w[3..0]	: WIRE;
	w_anode400w[3..0]	: WIRE;
	w_anode410w[3..0]	: WIRE;
	w_anode420w[3..0]	: WIRE;
	w_anode430w[3..0]	: WIRE;
	w_anode440w[3..0]	: WIRE;
	w_anode450w[3..0]	: WIRE;
	w_anode461w[3..0]	: WIRE;
	w_anode471w[3..0]	: WIRE;
	w_anode481w[3..0]	: WIRE;
	w_anode491w[3..0]	: WIRE;
	w_anode501w[3..0]	: WIRE;
	w_anode511w[3..0]	: WIRE;
	w_anode521w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[1..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode440w[3..3], w_anode430w[3..3], w_anode420w[3..3], w_anode410w[3..3], w_anode400w[3..3], w_anode390w[3..3], w_anode380w[3..3], w_anode363w[3..3]);
	eq_wire2w[] = ( w_anode521w[3..3], w_anode511w[3..3], w_anode501w[3..3], w_anode491w[3..3], w_anode481w[3..3], w_anode471w[3..3], w_anode461w[3..3], w_anode450w[3..3]);
	w_anode363w[] = ( (w_anode363w[2..2] & (! data_wire[2..2])), (w_anode363w[1..1] & (! data_wire[1..1])), (w_anode363w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode380w[] = ( (w_anode380w[2..2] & (! data_wire[2..2])), (w_anode380w[1..1] & (! data_wire[1..1])), (w_anode380w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode390w[] = ( (w_anode390w[2..2] & (! data_wire[2..2])), (w_anode390w[1..1] & data_wire[1..1]), (w_anode390w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode400w[] = ( (w_anode400w[2..2] & (! data_wire[2..2])), (w_anode400w[1..1] & data_wire[1..1]), (w_anode400w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode410w[] = ( (w_anode410w[2..2] & data_wire[2..2]), (w_anode410w[1..1] & (! data_wire[1..1])), (w_anode410w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode420w[] = ( (w_anode420w[2..2] & data_wire[2..2]), (w_anode420w[1..1] & (! data_wire[1..1])), (w_anode420w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode430w[] = ( (w_anode430w[2..2] & data_wire[2..2]), (w_anode430w[1..1] & data_wire[1..1]), (w_anode430w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode440w[] = ( (w_anode440w[2..2] & data_wire[2..2]), (w_anode440w[1..1] & data_wire[1..1]), (w_anode440w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode450w[] = ( (w_anode450w[2..2] & (! data_wire[2..2])), (w_anode450w[1..1] & (! data_wire[1..1])), (w_anode450w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode461w[] = ( (w_anode461w[2..2] & (! data_wire[2..2])), (w_anode461w[1..1] & (! data_wire[1..1])), (w_anode461w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode471w[] = ( (w_anode471w[2..2] & (! data_wire[2..2])), (w_anode471w[1..1] & data_wire[1..1]), (w_anode471w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode481w[] = ( (w_anode481w[2..2] & (! data_wire[2..2])), (w_anode481w[1..1] & data_wire[1..1]), (w_anode481w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode491w[] = ( (w_anode491w[2..2] & data_wire[2..2]), (w_anode491w[1..1] & (! data_wire[1..1])), (w_anode491w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode501w[] = ( (w_anode501w[2..2] & data_wire[2..2]), (w_anode501w[1..1] & (! data_wire[1..1])), (w_anode501w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode511w[] = ( (w_anode511w[2..2] & data_wire[2..2]), (w_anode511w[1..1] & data_wire[1..1]), (w_anode511w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode521w[] = ( (w_anode521w[2..2] & data_wire[2..2]), (w_anode521w[1..1] & data_wire[1..1]), (w_anode521w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
